#include "stdafx.h"
#include "CppUnitTest.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;

namespace prime_field_tests
{
	const char p[] = "41609267124995133285768740581002262150816576467207736915423657302317611036853";
	typedef PrimeField<p, 255> Fp;
	const StaticInvoker<Fp> Fp_initializer;

	TEST_CLASS(FiniteFieldPrimeTests)
	{
	public:
		
		TEST_METHOD(Mul)
		{
			Fp::Elem e1s[] = {  "10333785137698598008022712966446903648158182550139936985835341879462596643522",
								"2124589281519",
								"1461",
								"15862128177341310281726540649129427852418",
								"212183792860791917892360387433222332960739",
								"2667355155823518240348739535482298109890",
								"81047784983209624152132190578930876063676100720027691450784584932",
								"372982239759343156769878165871862585779478575148488347251417382",
								"676074",
								"73300399059871193624123203",
								"17676940186798981812747",
								"32485266",
								"33584294182472759396464535097497949938367374",
								"10618354082033988144315665108302617920929076218109",
								"7260851854447507672293541070125734159018715936529431520221581508029",
								"1631444235331356926776693303231547200989742219596866089435099526667222256",
								"7117196",
								"1276966670050576",
								"10232376847243222200270974869048135093",
								"32392103175734"
			};
			Fp::Elem e2s[] = {  "19700324107476335108164183297761694797160439133351642232373740221409719183898",
								"14232902917988898700688690484064171273499147481222937981874169899650",
								"10107697896024877684690078053592239360",
								"39476338549086580563502933713483644358378171017154888645030620046655189755307",
								"73062207661812008",
								"1749425940563510343691719139002379838463846907451009750538983125",
								"5407204981717530",
								"4567054732052019696060054481213100549",
								"7702974635065380998562199980625487056082844421638726216823032",
								"1",
								"0",
								"11078787315649340607066515156901507622237276161213704327",
								"23",
								"139130333186995007796103131830285",
								"135",
								"27575155021310783204254184124752485449182391137105529643295882567",
								"18090346",
								"853545936761820797668987464",
								"2481647031719608237527621831900069942124928798332808432585584602",
								"3820003515793262432"
			};
			char* ers[] = { "14580713500031580803013312549611027382485185902317279133512198671867515365233",
							"30745051713246105446151884219227643560878476997643349774763270679344216813072",
							"14767346626092346297332204036298261704960",
							"9504944084123686203483432413487388266115089471726176499541163767731263760720",
							"15502616336466083307235401995760444634639273778164262753912",
							"8327380270496686594347518428787322943443132088976480195046530309142241727419",
							"13185357933554475833108487599892439903173133329047027013034741000330078122164",
							"2865479865433673205900816860897881345449304239089808099575191530189477872813",
							"5207780873427192393221940789701395535954152959514980188312414536368",
							"73300399059871193624123203",
							"0",
							"359897352906294792345157224564977210909405431212486067907945982",
							"772438766196873466118684307242452848582449602",
							"39721325050080010486304921093716952912800428900589556011579554327384779202153",
							"980215000350413535759628044466974111467526651431473255229913503583915",
							"32637670296465954123636024095104511179284241809126500038869028266868857291454",
							"128752538189816",
							"1089949712601941826433776532838731589979264",
							"24032829396762865522670627356266650198022692998274514706271156891007106846651",
							"123737948015241981247787676225088"
			};
			Fp::Elem e3;
			for (int i = 0; i < 20; i++)
			{
				Fp::Mul(e3, e1s[i], e2s[i]);
				Assert::AreEqual(Fp::ToString(e3).c_str(), ers[i]);
			}
		}

		TEST_METHOD(Sqr)
		{
			Fp::Elem e1s[] = {  "9183770324688462231425204",
								"819460734101174532158784866478738919",
								"494453987928476312672",
								"47869341066194770581172304578557673924973",
								"1755450658017795137443417461285348191848231092907216145845707172491016230",
								"2",
								"41412524307762472862862221287016965850767407000065462488960494948544495969",
								"2494432351160060343932274274730798085322403",
								"1220120261945543844596525018",
								"144147208581143824989165700570536067337918514304961192122446117760",
								"3871617057512299758680095062237",
								"1795988307320705760458517940404222110645729578400971314",
								"1150421375759728672031081733152260811361509482812164584085735615610681985",
								"35233169944531570761901778704189045535754111484158353544869",
								"26750",
								"1007319147385668382794874508658401",
								"7842716692084848850275343686870",
								"14840797003589250689451147",
								"230942765518483889241666700966652400300176",
								"27481381078629429890510887843113642363925981138133"
			};
			char* ers[] = { "84341637376628422996789197685791163150121046441616",
							"671515894733635868780125188423067773050763521982692762433990660565288561",
							"244484746178373799133526309720993507779584",
							"9864271074109934987795011335985311454146509381741194248921763449633822519166",
							"16160710210617569557365709583814856773237845318503749281649736774005861885164",
							"4",
							"14250205309014353593033739017351607269425893731419870854989327944148537766069",
							"36556629862828332929715845903460791563681303795614184715300977440411798636725",
							"1488693453610062526806164251364756849479620481099900324",
							"6599998078842329214974172165666507792110911010309319656787558056777635653774",
							"14989418640020198217268130741420175189082549370971148903444169",
							"34963793677489135936393772054866731256780333162852289680372573798036716985774",
							"13309209543798116174166131445198580952140177527687272566381129652139380107755",
							"12771696233517165800825304501877854319917576513110096983572255641955963807637",
							"715562500",
							"1014691864689789901912345033555263075334380493269298406316907876801",
							"61508205112306313852710092785497388158527173344899164610396900",
							"220249255701743681741391748600043534082384099615609",
							"10390842294377642122829472864601195803214240890779084482872667499495922639841",
							"3072540791831990310167245059931174207957266846171087408763823338520708244286"
			};
			Fp::Elem e3;
			for (int i = 0; i < 20; i++)
			{
				Fp::Sqr(e3, e1s[i]);
				Assert::AreEqual(Fp::ToString(e3).c_str(), ers[i]);
			}
		}

		TEST_METHOD(Div)
		{
			Fp::Elem e1s[] = { "25780097158463536886518698606379344767225",
								"3083304186791965123532996771565703961534801014218752377655",
								"67173990072163748890195227502644543059498927493571039060883484",
								"133746646979214509426407537765388728084",
								"29084931899251333194716307524262864554641955130240671477554272976376842427",
								"1015947094669065945949940700350838670174628843811382",
								"67419755811749218856",
								"819891502989606103917051367",
								"124",
								"8095199093516415623684883207716213949228955624783701",
								"1489972834",
								"382514349784278736523878516337530657366806726101100",
								"5174883497163901759779109689394736170733206",
								"7023200521813685564287782786717454903681823699199164263928496901805515141",
								"1706578134732531668311426114186787431376482382434484",
								"837543202866744686119519859182938225256955719627",
								"31",
								"39172587289647569126965141285",
								"385588283",
								"241863308312897291"
			};
			Fp::Elem e2s[] = { "31697443967747628378819220326728625127892156159269589174358708",
								"11879025210821332869835042003775714165565620970196938",
								"48588276188582307364244",
								"184340679304809023836505",
								"17440685983442324647611",
								"253294924065732327003554176394497585187065136542183679564473516583849416",
								"65719348622417542540179933",
								"14165634",
								"7187708997460770305032991",
								"6687318062810027157286",
								"1768514418833115097158021173127409987874907305831412314",
								"10973445",
								"1160676901808899555587107861025408913038198892423711877595534225661175125198",
								"14699203079726988464171835921871210514962654535289012966300285164334614",
								"96051116834337434750776056567612292579648990067552117818781",
								"68016952587321578606976",
								"294301521256810274923702049",
								"24528686160471921469",
								"190092531113197914398648475601592",
								"302933831929821942619633464553451019988250559"
			};
			char* ers[] = { "27522894177768480326330187324265200194109786276876541004444204949257642714334",
							"21030036475978202341544948268650037008819410144531654547810101900453515177498",
							"31306301251887595128553696360746398940041446710388521315490181710175893026147",
							"538863904078090749618535163753899002168781926928999052576270314562310673942",
							"14585439870103679331082651348710141035973350453691113244179818049111579644028",
							"29612362915421183108191249173436034268356836351735114540969228984277775424737",
							"13116367014838416639488524104277799054115524907643474116301182453097818728496",
							"7233822578586891323014232361393907539064184736192292374842780270120780823034",
							"33340511819751171197228887182282285847033935613765530720329436154598227525305",
							"31936348309923293867419824803218398007581739397155838069673058196795644086644",
							"10599088182593566757426206056255878179001332539322220719380146510662808848444",
							"41401835916466466238510748313898964486627195963919838231879709741449905580176",
							"21543112119958053567340815714888430362200397867799675735461619691850464795142",
							"36873118591127082041255872492761199680449648785287628424135647788633894696953",
							"41318943238883427673177458276022735800100525096061665738757268612022612741890",
							"33802217683508287594095439587137594014684420781200933329448789000455483494676",
							"40635438968572277384507031524543333870883530376789533168761467995284951679380",
							"23393606500303391387131225736801372867916732411458407183813289189830831765771",
							"40675809049365920225271123962312027033851353763896605560162482631676717929812",
							"7710066784195258068408880742813529408528916736972800836128333345952913444921"
			};
			Fp::Elem e3;
			for (int i = 0; i < 20; i++)
			{
				Fp::Div(e3, e1s[i], e2s[i]);
				Assert::AreEqual(Fp::ToString(e3).c_str(), ers[i]);
			}
		}

		TEST_METHOD(Export_Import)
		{
			vector<Fp::Elem> test(10000, "0"), read;
			for (int i = 0; i < 10000; i++)
			{
				Fp::GetRandomElement(test[i]);
			}
			ofstream fout("test.bin", ios::binary);
			fout << test;
			fout.close();

			ifstream fin("test.bin", ios::binary);
			fin >> read;
			fin.close();

			for (int i = 0; i < 10000; i++)
			{
				Assert::AreEqual(Fp::ToString(test[i]).c_str(), (Fp::ToString(read[i]).c_str()));
			}
		}

	};
}